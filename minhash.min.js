const minHashDefaultConfig={prime:4294967311,maxHash:Math.pow(2,32)-1,numPerm:128,seed:1};class MinHash{constructor(s){this.config=Object.assign(Object.assign({},minHashDefaultConfig),s),this.hashValues=[],this.permA=[],this.permB=[],this.hashBands=[],this.initHashValues(),this.initPermutations()}initHashValues(){this.hashValues.fill(this.config.maxHash)}randInt(){const s=Math.sin(this.config.seed++)*this.config.maxHash;return Math.floor((s-Math.floor(s))*this.config.maxHash)}initPermutations(){const s=this.initPerm(!1);this.initPerm(!0,s)}initPerm(s,h={}){const t=[];for(let s=0;s<this.config.numPerm;s++){let s=this.randInt();for(;h[s];)s=this.randInt();t.push(s),h[s]=!0}return s?this.permB=t:this.permA=t,h}update(s){for(let h=0;h<this.hashValues.length;h++){const t=this.permA[h],i=this.permB[h],n=(t*this.hash(s)+i)%this.config.prime;n<this.hashValues[h]&&(this.hashValues[h]=n)}}hash(s){let h=0;if(!s.length)return h+this.config.maxHash;for(const t of s){h=(h<<5)-h+t.charCodeAt(0),h&=h}return h+this.config.maxHash}jaccard(s){if(this.hashValues.length!=s.hashValues.length)throw new Error("Cannot apply jaccard similarity to MinHashes with different count of hashValues");if(this.config.seed!=s.config.seed)throw new Error("Cannot apply jaccard similarity to MinHashes with different seeds");return this.hashValues.reduce((h,t,i)=>t===s.hashValues[i]?++h:h,0)/this.hashValues.length}}const lshDefaultConfig={bandSize:4};class LshIndex{constructor(s){this.config=Object.assign(Object.assign({},lshDefaultConfig),s),this.index={}}insert(s,h){const t=this.getHashBands(h);for(const h of t)Array.isArray(this.index[h])?this.index[h].push(s):this.index[h]=[s]}query(s){const h=[],t=this.getHashBands(s);for(let s=0;s<t.length;s++){const i=t[s];for(let s=0;s<this.index[i].length;s++)h.push(this.index[i][s])}return h}getHashBands(s){if(s.hashBands)return s.hashBands;s.hashBands=[];for(let h=0;h<s.hashValues.length;h++){const t=h*this.config.bandSize,i=t+this.config.bandSize,n=s.hashValues.slice(t,i);s.hashBands.push(n.join("."))}return s.hashBands}}module.exports={MinHash:MinHash,LshIndex:LshIndex};
